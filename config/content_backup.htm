<h1>About</h1>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">倉庫：  </span></span><a href="https://github.com/mdewcm2023/site-Hongbolin0408"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">https://github.com/mdewcm2023/site-Hongbolin0408</span></span></a></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">網站：  <a href="https://mdewcm2023.github.io/site-Hongbolin0408">https://mdewcm2023.github.io/site-Hongbolin0408</a></span></span></p>
<h1>筆記</h1>
<h2>權限</h2>
<p>近端倉儲的設定檔案:倉儲目錄下 .git中的config. 代表倉儲的 configuration flie (設定檔案)</p>
<h2>提交</h2>
<p>commit</p>
<p>git commit -m</p>
<p>message</p>
<p>指令執行時，隨後要接上提交字串，說明本次提交的改版說明</p>
<h2>補課</h2>
<p>期中考考試</p>
<h2>New bing</h2>
<p><span>想了解有關使用 cmsimde 和 GitHub Pages 創建靜態網站的具體信息</span></p>
<p>要使用 cmsimde 和 GitHub Pages 創建靜態網站，要執行以下步驟：</p>
<ol>
<li>在 github.com 建立一個新的倉儲</li>
<li>針對新倉儲設定 Github Pages,  把 main branch 設為網站根目錄</li>
<li>把倉儲 git clone 到近端, 加上 cmsimde 程式, 並將 up_dir 內容複製到倉儲根目錄</li>
<li>在近端執行動態網站, 用來編輯動態網站與靜態網站內容 (透過動態網站內容 generate_pages 而產生)</li>
<li>以 git add ., git commit -m "提交說明字串", git push (git commit 指令需要有身分設定, 也就是 home_ipv6 或 home_ipv4  目錄中的 user.name 與 user.email 進行提交, 至於 git push 需要 .git/config 中 url 可以透過 token 標示倉儲存取權, 而 home_ipv6/.gitconfig 若在純 IPv6 下還需要有 http.proxy 的設定)</li>
<li>持續利用 localhost 中的動態網站修改內容後, 轉為靜態然後重複上一個 acp 流程將改版送到 github.com</li>
</ol>
<h2>拉回請求</h2>
<p>當 github 用戶對特定倉儲無直接存取權的時候:</p>
<ol>
<li>保留該特定倉儲的所有資料 - 登入 github 帳號, 按 fork 之後， 將該倉儲放入自己的帳號裡面</li>
<li>修改該倉儲的資料 (找到倉儲內的要修改的資料 ， 更改後請原始倉儲擁有者可以內容合併), fork 後可以在自己的帳號下改版, 然後送出 pull requests (拉回請求, 請求原始倉儲作者可以 review 後, 決定是否合併)</li>
</ol>
<h2>建網頁</h2>
<p>用個人的site帳號建立網頁</p>
<ol>
<li>git clone 倉儲到近端</li>
<li>add<span> </span><a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> 倉儲</li>
<li>將 up_dir 內容複製到個人倉儲的根目錄</li>
<li>有關提交 (git config - 設定存至可攜 home 目錄中的 .gitconfig)與推送 (htts by token, SSH by keys) 的設定</li>
<li>配合將 github.com 上的倉儲設為 Github Pages, 把 main 分支設為網頁根目錄</li>
</ol>
<p><span>https token 必須勾選 repo 權限, 若要利用 Github Actions, 則同時勾選 Actions</span></p>
<h1>Brython</h1>
<h1>w9</h1>
<!-- <script>
  MathJax = {
    tex: {inlineMath: [['$', '$'], ['\(', '\)']]}
  };
  </script>
  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>-->